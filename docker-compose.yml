# docker-compose.yml

version: '3.8'
services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file:
      - .env
    ports:
      - "5432:5432"

  web:
    build:
      context: ./app
      # dockerfile: Dockerfile.web
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn main:app --host 0.0.0.0'
    # containers are sharing the same file at root directory
    volumes:
      - ./app:/lauretta
      - ./config:/config
    expose:
      - 8000
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.fastapi.rule=Host(`fastapi.localhost`)"

  # monofair:
  #   build:
  #     context: ./monofair2
  #   command: bash -c 'python3.8 src/track.py predict'
  #   # command: bash -c 'cd monoloco && python3.8 -m monoloco.run predict --webcam /videos/fastapidemoclip.mp4 --output_types multi'
  #   volumes:
  #     - ./monofair2:/lauretta
  #     - ./config:/config
  #     - ./videos:/videos
    # ports:
    #   - "100:100"
    # depends_on:
    #   - web
    #   - db

  monofair2:
    build:
      context: ./monofair2
    # 'predict' is needed only to activate default argparser, it could be any string
    # command: bash -c 'python3.8 main.py predict'
    # Encountered issue of cuda could not been recognized during image built. Hence, had to build it at runtime
    command: bash -c 'cd fairmot ; python3.8 DCNv2/setup.py install develop --user ; cd .. ; python3.8 main.py predict'
    runtime: nvidia
    volumes:
      - ./monofair2:/lauretta
      - ./config:/config
      - ./videos:/videos
    # ports:
    #   - "100:100"
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    depends_on:
      - web
      - db

  # fair:
  #   build:
  #     context: ./FairMOT
  #     # dockerfile: Dockerfile.fair
  #   command: bash -c 'python3 src/track.py mot'
  #   volumes:
  #     - ./FairMOT:/lauretta
  #     - ./config:/config
  #     - ./videos:/videos
  #   ports:
  #     - "100:100"
  #   depends_on:
  #     - web
  #     - db

  # monoloco:
  #   build:
  #     context: ./monoloco
  #     # dockerfile: Dockerfile.monoloco
  #   command: bash -c 'python3 -m monoloco.run predict --webcam /videos/fastapidemoclip.mp4 --activities social_distance --output_types multi'
  #   volumes:
  #     - ./monoloco:/lauretta
  #     - ./config:/config
  #     - ./videos:/videos
  #   ports:
  #     - "200:200"
  #   depends_on:
  #     - web
  #     - db

  traefik:
    image: traefik:v2.2
    ports:
      - 8008:82
      - 8081:8080
    volumes:
      - "./traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  postgres_data:
